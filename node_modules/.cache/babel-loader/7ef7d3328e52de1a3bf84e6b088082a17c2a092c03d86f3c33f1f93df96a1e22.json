{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\frontend\\\\src\\\\pages\\\\Book.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport BookForm from \"../components/BookForm\";\nimport { getAuthToken } from \"../utils/auth\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimpor;\nconst BookPage = () => {\n  closeModal = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = BookPage;\nexport const action = async ({\n  request,\n  params\n}) => {\n  const propertyId = params.propertyId;\n  const data = await request.formData();\n  const data_start = data.get(\"data_start\");\n  const data_end = data.get(\"data_end\");\n  // console.log(data_start, data_end, propertyId);\n\n  let saleData = {\n    placeId: propertyId,\n    data_start: data.get(\"data_start\"),\n    data_end: data.get(\"data_end\"),\n    nume: data.get(\"nume\"),\n    adresa: data.get(\"adresa\"),\n    telefon: data.get(\"telefon\"),\n    pay_type: data.get(\"pay_type\")\n  };\n  const token = getAuthToken();\n  const response = await fetch(\"http://localhost:8000/sale\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token\n    },\n    body: JSON.stringify(saleData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/\");\n};\nexport default BookPage;\nvar _c;\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"names":["json","redirect","BookForm","getAuthToken","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","impor","BookPage","closeModal","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","propertyId","data","formData","data_start","get","data_end","saleData","placeId","nume","adresa","telefon","pay_type","token","response","fetch","method","headers","Authorization","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["D:/proiecte/frontend/src/pages/Book.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport BookForm from \"../components/BookForm\";\r\nimport { getAuthToken } from \"../utils/auth\";\r\nimport Modal from \"react-modal\";\r\nimpor\r\n\r\n\r\nconst BookPage = () => {\r\n\r\n  closeModal=()=>{\r\n\r\n  }\r\n    return (\r\n      <>\r\n      <Modal isOpen={true}>\r\n        test\r\n      </Modal>\r\n        <BookForm />\r\n      </>\r\n    );\r\n};\r\n\r\n\r\nexport const action = async ({ request, params }) => {\r\n    const propertyId = params.propertyId;\r\n    const data = await request.formData();\r\n\r\n    const data_start = data.get(\"data_start\");\r\n    const data_end = data.get(\"data_end\");\r\n    // console.log(data_start, data_end, propertyId);\r\n\r\n    \r\n  let saleData = {\r\n    placeId: propertyId,\r\n    data_start: data.get(\"data_start\"),\r\n    data_end: data.get(\"data_end\"),\r\n    nume: data.get(\"nume\"),\r\n    adresa:data.get(\"adresa\"),\r\n    telefon:data.get(\"telefon\"),\r\n    pay_type:data.get(\"pay_type\"),\r\n\r\n  };\r\n\r\n  const token = getAuthToken();\r\n\r\n  const response = await fetch(\"http://localhost:8000/sale\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify(saleData),\r\n  });\r\n\r\n\r\n  if (response.status === 422 || response.status === 401) {\r\n    return response;\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not authenticate user.\" }, { status: 500 });\r\n  }\r\n\r\n  return redirect(\"/\");\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default BookPage;"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChCC,KAAK;AAGL,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAErBC,UAAU,GAACA,CAAA,KAAI,CAEf,CAAC;EACC,oBACEL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACAN,OAAA,CAACF,KAAK;MAACS,MAAM,EAAE,IAAK;MAAAD,QAAA,EAAC;IAErB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACNX,OAAA,CAACJ,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAET,CAAC;AAACC,EAAA,GAbIR,QAAQ;AAgBd,OAAO,MAAMS,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACjD,MAAMC,UAAU,GAAGD,MAAM,CAACC,UAAU;EACpC,MAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,QAAQ,CAAC,CAAC;EAErC,MAAMC,UAAU,GAAGF,IAAI,CAACG,GAAG,CAAC,YAAY,CAAC;EACzC,MAAMC,QAAQ,GAAGJ,IAAI,CAACG,GAAG,CAAC,UAAU,CAAC;EACrC;;EAGF,IAAIE,QAAQ,GAAG;IACbC,OAAO,EAAEP,UAAU;IACnBG,UAAU,EAAEF,IAAI,CAACG,GAAG,CAAC,YAAY,CAAC;IAClCC,QAAQ,EAAEJ,IAAI,CAACG,GAAG,CAAC,UAAU,CAAC;IAC9BI,IAAI,EAAEP,IAAI,CAACG,GAAG,CAAC,MAAM,CAAC;IACtBK,MAAM,EAACR,IAAI,CAACG,GAAG,CAAC,QAAQ,CAAC;IACzBM,OAAO,EAACT,IAAI,CAACG,GAAG,CAAC,SAAS,CAAC;IAC3BO,QAAQ,EAACV,IAAI,CAACG,GAAG,CAAC,UAAU;EAE9B,CAAC;EAED,MAAMQ,KAAK,GAAG/B,YAAY,CAAC,CAAC;EAE5B,MAAMgC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,SAAS,GAAGL;IAC7B,CAAC;IACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ;EAC/B,CAAC,CAAC;EAGF,IAAIO,QAAQ,CAACQ,MAAM,KAAK,GAAG,IAAIR,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOR,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAM5C,IAAI,CAAC;MAAE6C,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1E;EAEA,OAAO1C,QAAQ,CAAC,GAAG,CAAC;AAKtB,CAAC;AAED,eAAeS,QAAQ;AAAC,IAAAQ,EAAA;AAAA4B,YAAA,CAAA5B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}