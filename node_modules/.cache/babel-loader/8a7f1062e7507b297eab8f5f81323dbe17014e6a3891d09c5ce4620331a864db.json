{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n  return key.split(/[.[\\]]+/).filter(Boolean);\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n    current = current[key];\n  }\n  return current;\n};\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n    var numKeys = Object.keys(current).length;\n    if (_result === undefined) {\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n      var _removed = current[key],\n        final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n      return final;\n    } // set result in key\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n  var numericKey = Number(key);\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n  return array;\n};\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nvar publishFieldState = function publishFieldState(formState, field) {\n  var errors = formState.errors,\n    initialValues = formState.initialValues,\n    lastSubmittedValues = formState.lastSubmittedValues,\n    submitErrors = formState.submitErrors,\n    submitFailed = formState.submitFailed,\n    submitSucceeded = formState.submitSucceeded,\n    submitting = formState.submitting,\n    values = formState.values;\n  var active = field.active,\n    blur = field.blur,\n    change = field.change,\n    data = field.data,\n    focus = field.focus,\n    modified = field.modified,\n    name = field.name,\n    touched = field.touched,\n    visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited\n  };\n};\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n//      \nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nvar filterFormState = function filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n    return lastResult;\n  };\n};\nvar isPromise = function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n};\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\nvar version = '4.8.1';\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n    if (value && typeof value === 'object') {\n      return hasAnyError(value);\n    }\n    return typeof value !== 'undefined';\n  });\n};\nvar convertToExternalFormState = function convertToExternalFormState(_ref) {\n  var active = _ref.active,\n    dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n    error = _ref.error,\n    errors = _ref.errors,\n    initialValues = _ref.initialValues,\n    pristine = _ref.pristine,\n    submitting = _ref.submitting,\n    submitFailed = _ref.submitFailed,\n    submitSucceeded = _ref.submitSucceeded,\n    submitError = _ref.submitError,\n    submitErrors = _ref.submitErrors,\n    valid = _ref.valid,\n    validating = _ref.validating,\n    values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n};\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  if (force === void 0) {\n    force = false;\n  }\n  var notification = filter(state, lastState, subscription, force);\n  if (notification) {\n    subscriber(notification);\n  }\n}\nfunction notify(_ref2, state, lastState, filter) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var _entries$Number = entries[Number(key)],\n      subscription = _entries$Number.subscription,\n      subscriber = _entries$Number.subscriber;\n    notifySubscriber(subscriber, subscription, state, lastState, filter);\n  });\n}\nvar createForm = function createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n  var debug = config.debug,\n    destroyOnUnregister = config.destroyOnUnregister,\n    keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n    initialValues = config.initialValues,\n    mutators = config.mutators,\n    onSubmit = config.onSubmit,\n    validate = config.validate,\n    validateOnBlur = config.validateOnBlur;\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = false;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        var asyncValidationPromiseKey = nextAsyncValidationKey++;\n        var promise = errorsOrPromise.then(setErrors).then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n        promises.push(promise);\n        asyncValidationPromises[asyncValidationPromiseKey] = promise;\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n    return promises;\n  };\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n      if (validator) {\n        result.push(validator);\n      }\n      return result;\n    }, []);\n  };\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          var asyncValidationPromiseKey = nextAsyncValidationKey++;\n          var promise = errorOrPromise.then(setError) // errors must be resolved, not rejected\n          .then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n          promises.push(promise);\n          asyncValidationPromises[asyncValidationPromiseKey] = promise;\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n    return promises;\n  };\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      /* istanbul ignore next */\n\n      if (callback) {\n        callback();\n      }\n      return;\n    }\n    var fields = state.fields,\n      formState = state.formState;\n    var fieldKeys = Object.keys(fields);\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(fields[key]).length;\n    })) {\n      if (callback) {\n        callback();\n      }\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n    var limitedFieldLevelValidation = false;\n    if (fieldChanged) {\n      var changedField = fields[fieldChanged];\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(fields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n    processErrors();\n    if (promises.length) {\n      // sync errors have been set. notify listeners while we wait for others\n      state.formState.validating++;\n      if (callback) {\n        callback();\n      }\n      var afterPromises = function afterPromises() {\n        state.formState.validating--;\n        processErrors();\n        if (callback) {\n          callback();\n        }\n      };\n      Promise.all(promises).then(afterPromises, afterPromises);\n    } else if (callback) {\n      callback();\n    }\n  };\n  var notifyFieldListeners = function notifyFieldListeners(force) {\n    if (inBatch || validationPaused) {\n      return;\n    }\n    var fields = state.fields,\n      fieldSubscribers = state.fieldSubscribers,\n      formState = state.formState;\n    Object.keys(fields).forEach(function (name) {\n      var field = fields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      if (!shallowEqual(fieldState, lastFieldState)) {\n        // **************************************************************\n        // Curious about why a field is getting notified? Uncomment this.\n        // **************************************************************\n        // const diffKeys = Object.keys(fieldState).filter(\n        //   key => fieldState[key] !== (lastFieldState && lastFieldState[key])\n        // )\n        // console.debug(\n        //   'notifying',\n        //   name,\n        //   '\\nField State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({ ...result, [key]: fieldState[key] }),\n        //     {}\n        //   ),\n        //   '\\nLast Field State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({\n        //       ...result,\n        //       [key]: lastFieldState && lastFieldState[key]\n        //     }),\n        //     {}\n        //   )\n        // )\n        field.lastFieldState = fieldState;\n        notify(fieldSubscribers[name], fieldState, lastFieldState, filterFieldState);\n      }\n    });\n  };\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n      formState = state.formState,\n      lastFormState = state.lastFormState;\n    var fieldKeys = Object.keys(fields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = fieldKeys.reduce(function (result, key) {\n      var dirty = !fields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && !fieldKeys.every(function (key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      return fields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key));\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n    var _fieldKeys$reduce = fieldKeys.reduce(function (result, key) {\n        result.modified[key] = fields[key].modified;\n        result.touched[key] = fields[key].touched;\n        result.visited[key] = fields[key].visited;\n        return result;\n      }, {\n        modified: {},\n        touched: {},\n        visited: {}\n      }),\n      modified = _fieldKeys$reduce.modified,\n      touched = _fieldKeys$reduce.touched,\n      visited = _fieldKeys$reduce.visited;\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n  var notifying = false;\n  var scheduleNotification = false;\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n      notifying = false;\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  }; // generate initial errors\n\n  runValidation();\n  var api = {\n    batch: function batch(fn) {\n      inBatch = true;\n      fn();\n      inBatch = false;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n        formState = state.formState;\n      var previous = fields[name];\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n        formState = state.formState;\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n    focus: function focus(name) {\n      var field = state.fields[name];\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n        formState = state.formState;\n      var values = typeof data === 'function' ? data(formState.values) : data;\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      Object.keys(fields).forEach(function (key) {\n        var field = fields[key];\n        field.modified = false;\n        field.touched = false;\n        field.visited = false;\n        if (keepDirtyOnReinitialize) {\n          var pristine = fields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n          if (pristine) {\n            // only update pristine values\n            formState.values = setIn(formState.values, key, getIn(values, key));\n          }\n        }\n      });\n      formState.initialValues = values;\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription\n      };\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          visited: false\n        };\n      }\n      if (fieldConfig) {\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n        if (fieldConfig.initialValue !== undefined) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n        }\n        if (fieldConfig.defaultValue !== undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n      var sentFirstNotification = false;\n      var firstNotification = function firstNotification() {\n        var fieldState = publishFieldState(state.formState, state.fields[name]);\n        notifySubscriber(subscriber, subscription, fieldState, undefined, filterFieldState, true);\n        state.fields[name].lastFieldState = fieldState;\n        sentFirstNotification = true;\n      };\n      runValidation(undefined, function () {\n        notifyFormListeners();\n        if (!sentFirstNotification) {\n          firstNotification();\n        }\n        notifyFieldListeners();\n      });\n      return function () {\n        delete state.fields[name].validators[index];\n        delete state.fieldSubscribers[name].entries[index];\n        if (!Object.keys(state.fieldSubscribers[name].entries).length) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n        case 'initialValues':\n          api.initialize(value);\n          break;\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n        case 'mutators':\n          mutators = value;\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n          break;\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.reduce(function (result, key) {\n          result.push(asyncValidationPromises[Number(key)]);\n          return result;\n        }, [])).then(api.submit, api.submit);\n        return;\n      }\n      var resolvePromise;\n      var completeCalled = false;\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          delete formState.submitErrors;\n          delete formState.submitError;\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n        }\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n        return errors;\n      };\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers,\n        lastFormState = state.lastFormState;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription\n      };\n      var nextFormState = calculateNextFormState();\n      if (nextFormState !== lastFormState) {\n        state.lastFormState = nextFormState;\n      }\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n};\n\n//\n\nexport { createForm, configOptions, version, ARRAY_ERROR, FORM_ERROR, formSubscriptionItems, fieldSubscriptionItems, getIn, setIn };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","toPath","key","undefined","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","setInRecursor","index","value","destroyArrays","_extends2","_ref","_result2","_result","numKeys","Object","keys","_removed","final","map","numericKey","_result3","_array","existingValue","result","array","concat","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","name","touched","visited","error","submitError","initial","pristine","isEqual","dirtySinceLastSubmit","valid","dirty","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","configOptions","version","tripleEquals","hasAnyError","convertToExternalFormState","validating","hasSubmitErrors","hasValidationErrors","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","_entries$Number","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","before","after","renameField","from","to","_extends3","lastFieldState","getMutatorApi","mutatableState","returnValue","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","runRecordLevelValidation","setErrors","promises","errorsOrPromise","asyncValidationPromiseKey","promise","push","getValidators","validators","validator","runFieldLevelValidation","setError","errorOrPromise","fieldChanged","callback","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromises","Promise","all","fieldState","markAllFieldsTouched","hasSyncErrors","calculateNextFormState","foundDirty","dirtyFields","every","nonNullLastSubmittedValues","nextFormState","_fieldKeys$reduce","callDebug","notifying","scheduleNotification","api","batch","getFieldState","getRegisteredFields","getState","initialize","isValidationPaused","pauseValidation","registerField","fieldConfig","getValidator","initialValue","defaultValue","sentFirstNotification","firstNotification","reset","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"sources":["D:/proiecte/frontend/node_modules/final-form/dist/final-form.es.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  return key.split(/[.[\\]]+/).filter(Boolean);\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    var numKeys = Object.keys(current).length;\n\n    if (_result === undefined) {\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nvar publishFieldState = function publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited\n  };\n};\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nvar filterFormState = function filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\nvar version = '4.8.1';\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object') {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nvar convertToExternalFormState = function convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n};\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n  }\n}\n\nfunction notify(_ref2, state, lastState, filter) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var _entries$Number = entries[Number(key)],\n        subscription = _entries$Number.subscription,\n        subscriber = _entries$Number.subscriber;\n    notifySubscriber(subscriber, subscription, state, lastState, filter);\n  });\n}\n\nvar createForm = function createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = false;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        var asyncValidationPromiseKey = nextAsyncValidationKey++;\n        var promise = errorsOrPromise.then(setErrors).then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n        promises.push(promise);\n        asyncValidationPromises[asyncValidationPromiseKey] = promise;\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          var asyncValidationPromiseKey = nextAsyncValidationKey++;\n          var promise = errorOrPromise.then(setError) // errors must be resolved, not rejected\n          .then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n          promises.push(promise);\n          asyncValidationPromises[asyncValidationPromiseKey] = promise;\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      /* istanbul ignore next */\n\n      if (callback) {\n        callback();\n      }\n\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n    var fieldKeys = Object.keys(fields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(fields[key]).length;\n    })) {\n      if (callback) {\n        callback();\n      }\n\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = fields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(fields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors();\n\n    if (promises.length) {\n      // sync errors have been set. notify listeners while we wait for others\n      state.formState.validating++;\n\n      if (callback) {\n        callback();\n      }\n\n      var afterPromises = function afterPromises() {\n        state.formState.validating--;\n        processErrors();\n\n        if (callback) {\n          callback();\n        }\n      };\n\n      Promise.all(promises).then(afterPromises, afterPromises);\n    } else if (callback) {\n      callback();\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(force) {\n    if (inBatch || validationPaused) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n    Object.keys(fields).forEach(function (name) {\n      var field = fields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n\n      if (!shallowEqual(fieldState, lastFieldState)) {\n        // **************************************************************\n        // Curious about why a field is getting notified? Uncomment this.\n        // **************************************************************\n        // const diffKeys = Object.keys(fieldState).filter(\n        //   key => fieldState[key] !== (lastFieldState && lastFieldState[key])\n        // )\n        // console.debug(\n        //   'notifying',\n        //   name,\n        //   '\\nField State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({ ...result, [key]: fieldState[key] }),\n        //     {}\n        //   ),\n        //   '\\nLast Field State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({\n        //       ...result,\n        //       [key]: lastFieldState && lastFieldState[key]\n        //     }),\n        //     {}\n        //   )\n        // )\n        field.lastFieldState = fieldState;\n        notify(fieldSubscribers[name], fieldState, lastFieldState, filterFieldState);\n      }\n    });\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n    var fieldKeys = Object.keys(fields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = fieldKeys.reduce(function (result, key) {\n      var dirty = !fields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && !fieldKeys.every(function (key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      return fields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key));\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _fieldKeys$reduce = fieldKeys.reduce(function (result, key) {\n      result.modified[key] = fields[key].modified;\n      result.touched[key] = fields[key].touched;\n      result.visited[key] = fields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _fieldKeys$reduce.modified,\n        touched = _fieldKeys$reduce.touched,\n        visited = _fieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  }; // generate initial errors\n\n\n  runValidation();\n  var api = {\n    batch: function batch(fn) {\n      inBatch = true;\n      fn();\n      inBatch = false;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n\n      Object.keys(fields).forEach(function (key) {\n        var field = fields[key];\n        field.modified = false;\n        field.touched = false;\n        field.visited = false;\n\n        if (keepDirtyOnReinitialize) {\n          var pristine = fields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n          if (pristine) {\n            // only update pristine values\n            formState.values = setIn(formState.values, key, getIn(values, key));\n          }\n        }\n      });\n      formState.initialValues = values;\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          visited: false\n        };\n      }\n\n      if (fieldConfig) {\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n        }\n\n        if (fieldConfig.defaultValue !== undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      var sentFirstNotification = false;\n\n      var firstNotification = function firstNotification() {\n        var fieldState = publishFieldState(state.formState, state.fields[name]);\n        notifySubscriber(subscriber, subscription, fieldState, undefined, filterFieldState, true);\n        state.fields[name].lastFieldState = fieldState;\n        sentFirstNotification = true;\n      };\n\n      runValidation(undefined, function () {\n        notifyFormListeners();\n\n        if (!sentFirstNotification) {\n          firstNotification();\n        }\n\n        notifyFieldListeners();\n      });\n      return function () {\n        delete state.fields[name].validators[index];\n        delete state.fieldSubscribers[name].entries[index];\n\n        if (!Object.keys(state.fieldSubscribers[name].entries).length) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.reduce(function (result, key) {\n          result.push(asyncValidationPromises[Number(key)]);\n          return result;\n        }, [])).then(api.submit, api.submit);\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          delete formState.submitErrors;\n          delete formState.submitError;\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers,\n          lastFormState = state.lastFormState;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription\n      };\n      var nextFormState = calculateNextFormState();\n\n      if (nextFormState !== lastFormState) {\n        state.lastFormState = nextFormState;\n      }\n\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n};\n\n//\n\nexport { createForm, configOptions, version, ARRAY_ERROR, FORM_ERROR, formSubscriptionItems, fieldSubscriptionItems, getIn, setIn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}