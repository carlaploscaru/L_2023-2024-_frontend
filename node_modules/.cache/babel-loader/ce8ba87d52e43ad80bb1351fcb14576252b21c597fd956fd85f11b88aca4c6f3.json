{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport AuthenticationPage, { action as authAction } from \"./pages/Authentication\";\nimport HomePage from \"./pages/Home\";\nimport ConfirmPage, { action as confirmAction } from \"./pages/Confirmation\";\nimport { action as logoutAction } from \"./pages/Logout\";\nimport { tokenLoader } from \"./utils/auth\";\nimport RecoverPasswordPage, { action as resetAction } from \"./pages/RecoverPassword\";\nimport ErrorPage from \"./pages/Error\";\nimport PropertiesRootLayout from \"./pages/PropertiesRoot\";\nimport PropertiesPage, { loader as propertiesLoader } from \"./pages/Properties\";\nimport NewPropertyPage from \"./pages/NewProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this),\n  id: \"root\",\n  loader: tokenLoader,\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"properties\",\n    element: /*#__PURE__*/_jsxDEV(PropertiesRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(PropertiesPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this),\n      loader: propertiesLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewPropertyPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this),\n      action: manipulatePropertyAction\n      // loader: checkAuthLoader,\n    }]\n  }, {\n    path: \"auth\",\n    element: /*#__PURE__*/_jsxDEV(AuthenticationPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this),\n    action: authAction\n  }, {\n    path: \"confirm\",\n    element: /*#__PURE__*/_jsxDEV(ConfirmPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this),\n    action: confirmAction\n  }, {\n    path: \"recover-password\",\n    element: /*#__PURE__*/_jsxDEV(RecoverPasswordPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this),\n    action: resetAction\n  }, {\n    path: \"logout\",\n    action: logoutAction\n  }]\n}]);\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","RootLayout","AuthenticationPage","action","authAction","HomePage","ConfirmPage","confirmAction","logoutAction","tokenLoader","RecoverPasswordPage","resetAction","ErrorPage","PropertiesRootLayout","PropertiesPage","loader","propertiesLoader","NewPropertyPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","id","children","index","manipulatePropertyAction","App","_c","$RefreshReg$"],"sources":["D:/proiecte/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\nimport RootLayout from \"./pages/Root\";\r\nimport AuthenticationPage, { action as authAction } from \"./pages/Authentication\";\r\nimport HomePage from \"./pages/Home\";\r\nimport ConfirmPage, { action as confirmAction } from \"./pages/Confirmation\";\r\nimport { action as logoutAction } from \"./pages/Logout\";\r\nimport { tokenLoader } from \"./utils/auth\";\r\nimport RecoverPasswordPage, { action as resetAction } from \"./pages/RecoverPassword\";\r\nimport ErrorPage from \"./pages/Error\";\r\nimport PropertiesRootLayout from \"./pages/PropertiesRoot\";\r\nimport PropertiesPage, { loader as propertiesLoader } from \"./pages/Properties\";\r\nimport NewPropertyPage from \"./pages/NewProperty\";\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <RootLayout />,\r\n    errorElement: <ErrorPage />,\r\n    id: \"root\",\r\n    loader: tokenLoader,\r\n    children: [\r\n      {\r\n        index: true,\r\n        element: <HomePage />\r\n      },\r\n      {\r\n        path: \"properties\",\r\n        element: <PropertiesRootLayout />,\r\n        children: [\r\n          {\r\n            index: true,\r\n            element: <PropertiesPage />,\r\n            loader: propertiesLoader\r\n          },\r\n          {\r\n            path: \"new\",\r\n            element: <NewPropertyPage />,\r\n             action: manipulatePropertyAction,\r\n            // loader: checkAuthLoader,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: \"auth\",\r\n        element: <AuthenticationPage />,\r\n        action: authAction\r\n      },\r\n      {\r\n        path: \"confirm\",\r\n        element: <ConfirmPage />,\r\n        action: confirmAction\r\n      },\r\n      {\r\n        path: \"recover-password\",\r\n        element: <RecoverPasswordPage />,\r\n        action: resetAction\r\n      },\r\n      {\r\n        path: \"logout\",\r\n        action: logoutAction\r\n      }\r\n    ]\r\n  },\r\n]);\r\n\r\n\r\nconst App = () => {\r\n  return <RouterProvider router={router} />;\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}