{"ast":null,"code":"// import { Form, redirect, useNavigate, useNavigation } from \"react-router-dom\";\n// import classes from \"./PropertyForm.module.css\";\n// import { getAuthToken } from \"../utils/auth\";\n\n// const PropertyForm = ({ method, property }) => {\n//   const navigate = useNavigate();\n//   const navigation = useNavigation();\n\n//   const isSubmitting = navigation.state === \"submitting\";\n\n//   const cancelHandler = () => {\n//     navigate(\"..\");\n//   };\n\n//   return (\n//     <Form method={method} className={classes.form}>\n//       <p>\n//         <p>\n//           <label htmlFor=\"title\">Title</label>\n//           <input\n//             id=\"title\"\n//             type=\"text\"\n//             name=\"title\"\n//             required\n//             defaultValue={property ? property.title : \"\"}\n//           />\n//         </p>\n//         <p>\n//           <label htmlFor=\"suprafata\">Suprafata</label>\n//           <input\n//             id=\"suprafata\"\n//             name=\"suprafata\"\n//             type=\"text\"\n//             required\n//             defaultValue={property ? property.suprafata : \"\"}\n//           />\n//         </p>\n//         <p>\n//           <label htmlFor=\"tara\">Tara</label>\n//           <input\n//             id=\"tara\"\n//             type=\"text\"\n//             name=\"tara\"\n//             required\n//             defaultValue={property ? property.tara : \"\"}\n//           />\n//         </p>\n//         <p>\n//           <label htmlFor=\"oras\">Oras</label>\n//           <input\n//             id=\"oras\"\n//             type=\"text\"\n//             name=\"oras\"\n//             required\n//             defaultValue={property ? property.oras : \"\"}\n//           />\n//         </p>\n\n//         <p>\n//           <label htmlFor=\"strada\">Strada</label>\n//           <input\n//             id=\"strada\"\n//             type=\"strada\"\n//             name=\"strada\"\n//             required\n//             defaultValue={property ? property.strada : \"\"}\n//           />\n//         </p>\n\n//         <p>\n//           <label htmlFor=\"judet\">Judet</label>\n//           <input\n//             id=\"judet\"\n//             type=\"text\"\n//             name=\"judet\"\n//             required\n//             defaultValue={property ? property.judet : \"\"}\n//           />\n//         </p>\n\n//         <p>\n//           <label htmlFor=\"category\">Categorie</label>\n//           <input\n//             id=\"category\"\n//             name=\"category\"\n//             type=\"text\"\n//             required\n//             defaultValue={property ? property.categoryId : \"\"}\n//           />\n//         </p>\n\n//         <div className={classes.actions}>\n//           <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n//             Cancel\n//           </button>\n//           <button disabled={isSubmitting}>\n//             {isSubmitting ? \"Submitting...\" : \"Save\"}\n//           </button>\n//         </div>\n//       </p>\n//     </Form>\n//   );\n// };\n\n// export default PropertyForm;\n\n// export const action = async ({request, params}) => {\n//     const method = request.method;\n//     const data = await request.formData();\n\n//     const propertyData = {\n//         title: data.get(\"title\"),\n//         suprafata: data.get(\"suprafata\"),\n//         tara: data.get(\"tara\"),\n//         oras: data.get(\"oras\"),\n//         strada: data.get(\"strada\"),\n//         judet: data.get(\"judet\"),\n//         categoryId: data.get(\"category\"),\n//       };\n\n//       let url = \"http://localhost:8000/place\";\n\n//       if (method === \"PATCH\") {\n//         const propertyId = params.propertyId;\n//         url = \"http://localhost:8000/place/\" + propertyId;\n//       }\n\n//       const token = getAuthToken();\n\n//       const response = await fetch(url, {\n//         method: method,\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: \"Bearer \" + token,\n//         },\n//         body: JSON.stringify(propertyData),\n//       });\n\n//       if(response.status === 422 || response.status === 401) {\n//         return response;\n//       }\n\n//       if (!response.ok) {\n//         throw json(\n//           { message: \"Could not save property\" },\n//           { status: response.status }\n//         );\n//       }\n\n//       return redirect(\"/properties\");\n//     }","map":{"version":3,"names":[],"sources":["D:/proiecte/frontend/src/components/PropertyForm.js"],"sourcesContent":["// import { Form, redirect, useNavigate, useNavigation } from \"react-router-dom\";\r\n// import classes from \"./PropertyForm.module.css\";\r\n// import { getAuthToken } from \"../utils/auth\";\r\n\r\n// const PropertyForm = ({ method, property }) => {\r\n//   const navigate = useNavigate();\r\n//   const navigation = useNavigation();\r\n\r\n//   const isSubmitting = navigation.state === \"submitting\";\r\n\r\n//   const cancelHandler = () => {\r\n//     navigate(\"..\");\r\n//   };\r\n\r\n//   return (\r\n//     <Form method={method} className={classes.form}>\r\n//       <p>\r\n//         <p>\r\n//           <label htmlFor=\"title\">Title</label>\r\n//           <input\r\n//             id=\"title\"\r\n//             type=\"text\"\r\n//             name=\"title\"\r\n//             required\r\n//             defaultValue={property ? property.title : \"\"}\r\n//           />\r\n//         </p>\r\n//         <p>\r\n//           <label htmlFor=\"suprafata\">Suprafata</label>\r\n//           <input\r\n//             id=\"suprafata\"\r\n//             name=\"suprafata\"\r\n//             type=\"text\"\r\n//             required\r\n//             defaultValue={property ? property.suprafata : \"\"}\r\n//           />\r\n//         </p>\r\n//         <p>\r\n//           <label htmlFor=\"tara\">Tara</label>\r\n//           <input\r\n//             id=\"tara\"\r\n//             type=\"text\"\r\n//             name=\"tara\"\r\n//             required\r\n//             defaultValue={property ? property.tara : \"\"}\r\n//           />\r\n//         </p>\r\n//         <p>\r\n//           <label htmlFor=\"oras\">Oras</label>\r\n//           <input\r\n//             id=\"oras\"\r\n//             type=\"text\"\r\n//             name=\"oras\"\r\n//             required\r\n//             defaultValue={property ? property.oras : \"\"}\r\n//           />\r\n//         </p>\r\n\r\n//         <p>\r\n//           <label htmlFor=\"strada\">Strada</label>\r\n//           <input\r\n//             id=\"strada\"\r\n//             type=\"strada\"\r\n//             name=\"strada\"\r\n//             required\r\n//             defaultValue={property ? property.strada : \"\"}\r\n//           />\r\n//         </p>\r\n\r\n//         <p>\r\n//           <label htmlFor=\"judet\">Judet</label>\r\n//           <input\r\n//             id=\"judet\"\r\n//             type=\"text\"\r\n//             name=\"judet\"\r\n//             required\r\n//             defaultValue={property ? property.judet : \"\"}\r\n//           />\r\n//         </p>\r\n\r\n//         <p>\r\n//           <label htmlFor=\"category\">Categorie</label>\r\n//           <input\r\n//             id=\"category\"\r\n//             name=\"category\"\r\n//             type=\"text\"\r\n//             required\r\n//             defaultValue={property ? property.categoryId : \"\"}\r\n//           />\r\n//         </p>\r\n\r\n//         <div className={classes.actions}>\r\n//           <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\r\n//             Cancel\r\n//           </button>\r\n//           <button disabled={isSubmitting}>\r\n//             {isSubmitting ? \"Submitting...\" : \"Save\"}\r\n//           </button>\r\n//         </div>\r\n//       </p>\r\n//     </Form>\r\n//   );\r\n// };\r\n\r\n// export default PropertyForm;\r\n\r\n// export const action = async ({request, params}) => {\r\n//     const method = request.method;\r\n//     const data = await request.formData();\r\n\r\n//     const propertyData = {\r\n//         title: data.get(\"title\"),\r\n//         suprafata: data.get(\"suprafata\"),\r\n//         tara: data.get(\"tara\"),\r\n//         oras: data.get(\"oras\"),\r\n//         strada: data.get(\"strada\"),\r\n//         judet: data.get(\"judet\"),\r\n//         categoryId: data.get(\"category\"),\r\n//       };\r\n\r\n//       let url = \"http://localhost:8000/place\";\r\n\r\n//       if (method === \"PATCH\") {\r\n//         const propertyId = params.propertyId;\r\n//         url = \"http://localhost:8000/place/\" + propertyId;\r\n//       }\r\n    \r\n//       const token = getAuthToken();\r\n      \r\n//       const response = await fetch(url, {\r\n//         method: method,\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: \"Bearer \" + token,\r\n//         },\r\n//         body: JSON.stringify(propertyData),\r\n//       });\r\n\r\n//       if(response.status === 422 || response.status === 401) {\r\n//         return response;\r\n//       }\r\n\r\n//       if (!response.ok) {\r\n//         throw json(\r\n//           { message: \"Could not save property\" },\r\n//           { status: response.status }\r\n//         );\r\n//       }\r\n\r\n//       return redirect(\"/properties\");\r\n//     }"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}