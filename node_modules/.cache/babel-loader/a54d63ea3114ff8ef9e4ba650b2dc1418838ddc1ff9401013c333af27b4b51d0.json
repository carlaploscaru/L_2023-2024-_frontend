{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\frontend\\\\src\\\\components\\\\ClientList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientList = ({\n  clients\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My clients: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clients.map(rez => {\n        let date_begin = new Date(rez.data_start);\n        let date_end = new Date(rez.data_end);\n        let differenceInTime = date_end.getTime() - date_begin.getTime();\n        let differenceInDays = Math.round(differenceInTime / (1000 * 3600 * 24));\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"tara: \", rez.tara, \", oras: \", rez.oras, \", suprafata:\", rez.suprafata, \", \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"start: \", rez.data_start, \", end: \", rez.data_end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"clints: \", rez.clients]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total price: \", differenceInDays * rez.price, \" \", rez.currency, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = ClientList;\nexport default ClientList;\nvar _c;\n$RefreshReg$(_c, \"ClientList\");","map":{"version":3,"names":["ClientList","clients","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rez","date_begin","Date","data_start","date_end","data_end","differenceInTime","getTime","differenceInDays","Math","round","tara","oras","suprafata","price","currency","_c","$RefreshReg$"],"sources":["D:/proiecte/frontend/src/components/ClientList.js"],"sourcesContent":["const ClientList = ({ clients }) => {\r\n    return (\r\n        <>\r\n            <h1>My clients: </h1>\r\n            <ul>\r\n                {\r\n                    clients.map(rez => {\r\n                        let date_begin = new Date(rez.data_start);\r\n                        let date_end = new Date(rez.data_end);\r\n                        let differenceInTime = date_end.getTime() - date_begin.getTime();\r\n                        let differenceInDays = Math.round(differenceInTime / (1000 * 3600 * 24));\r\n                        return (\r\n                            <li>\r\n                                <p>tara: {rez.tara}, oras: {rez.oras}, suprafata:{rez.suprafata}, </p>\r\n                                <p>start: {rez.data_start}, end: {rez.data_end}</p>\r\n                                <p>clints: {rez.clients}</p>\r\n                                <p>Total price: {differenceInDays * rez.price} {rez.currency} </p>\r\n                            </li>)\r\n                    })\r\n\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientList;"],"mappings":";;;AAAA,MAAMA,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAChC,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBN,OAAA;MAAAE,QAAA,EAEQH,OAAO,CAACQ,GAAG,CAACC,GAAG,IAAI;QACf,IAAIC,UAAU,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACG,UAAU,CAAC;QACzC,IAAIC,QAAQ,GAAG,IAAIF,IAAI,CAACF,GAAG,CAACK,QAAQ,CAAC;QACrC,IAAIC,gBAAgB,GAAGF,QAAQ,CAACG,OAAO,CAAC,CAAC,GAAGN,UAAU,CAACM,OAAO,CAAC,CAAC;QAChE,IAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACJ,gBAAgB,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;QACxE,oBACId,OAAA;UAAAE,QAAA,gBACIF,OAAA;YAAAE,QAAA,GAAG,QAAM,EAACM,GAAG,CAACW,IAAI,EAAC,UAAQ,EAACX,GAAG,CAACY,IAAI,EAAC,cAAY,EAACZ,GAAG,CAACa,SAAS,EAAC,IAAE;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACtEN,OAAA;YAAAE,QAAA,GAAG,SAAO,EAACM,GAAG,CAACG,UAAU,EAAC,SAAO,EAACH,GAAG,CAACK,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnDN,OAAA;YAAAE,QAAA,GAAG,UAAQ,EAACM,GAAG,CAACT,OAAO;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BN,OAAA;YAAAE,QAAA,GAAG,eAAa,EAACc,gBAAgB,GAAGR,GAAG,CAACc,KAAK,EAAC,GAAC,EAACd,GAAG,CAACe,QAAQ,EAAC,GAAC;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MACb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CAAC;EAAA,eAEP,CAAC;AAEX,CAAC;AAAAkB,EAAA,GAzBK1B,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}