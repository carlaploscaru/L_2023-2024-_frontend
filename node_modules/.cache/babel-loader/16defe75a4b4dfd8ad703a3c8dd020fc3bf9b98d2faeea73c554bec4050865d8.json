{"ast":null,"code":"// import { Suspense } from \"react\";\n// import { Await, defer, json, redirect, useLoaderData, useRouteLoaderData } from \"react-router-dom\"\n// import PropertyList from \"../components/PropertyList\";\n// import { getAuthToken } from \"../utils/auth\";\n\n// const PropertiesPage = () => {\n//   const { properties } = useLoaderData();\n\n//   return (\n//     <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\n//       <Await resolve={properties}>\n//         {(loadedProperties) => <PropertyList properties={loadedProperties} />}\n//       </Await>\n//     </Suspense>\n//   );\n// }\n\n// const loadProperties = async () => {\n//     const token = getAuthToken();\n\n//     const response = await fetch(\"http://localhost:8000/place\", {\n//       method: \"GET\",\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     });\n\n//     if (!response.ok) {\n//       throw json({ message: \"Could not fetch properties\" }, { status: 500 });\n//     } else {\n//       const resData = await response.json();\n\n//       return resData.places;\n//     }\n//   };\n\n//   export function loader() {\n//     const  token  = getAuthToken();\n//     if(!token) {\n//       return redirect('/auth?mode=login');\n//     }\n\n//     return defer({//pt Suspense de sus\n//       properties: loadProperties(),\n//     });\n//   }\n\n// export default PropertiesPage;","map":{"version":3,"names":[],"sources":["D:/proiecte/frontend/src/pages/Properties.js"],"sourcesContent":["// import { Suspense } from \"react\";\r\n// import { Await, defer, json, redirect, useLoaderData, useRouteLoaderData } from \"react-router-dom\"\r\n// import PropertyList from \"../components/PropertyList\";\r\n// import { getAuthToken } from \"../utils/auth\";\r\n\r\n// const PropertiesPage = () => {\r\n//   const { properties } = useLoaderData();\r\n\r\n//   return (\r\n//     <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n//       <Await resolve={properties}>\r\n//         {(loadedProperties) => <PropertyList properties={loadedProperties} />}\r\n//       </Await>\r\n//     </Suspense>\r\n//   );\r\n// }\r\n\r\n// const loadProperties = async () => {\r\n//     const token = getAuthToken();\r\n    \r\n//     const response = await fetch(\"http://localhost:8000/place\", {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         Authorization: \"Bearer \" + token,\r\n//       },\r\n//     });\r\n  \r\n//     if (!response.ok) {\r\n//       throw json({ message: \"Could not fetch properties\" }, { status: 500 });\r\n//     } else {\r\n//       const resData = await response.json();\r\n  \r\n\r\n\r\n//       return resData.places;\r\n//     }\r\n//   };\r\n  \r\n//   export function loader() {\r\n//     const  token  = getAuthToken();\r\n//     if(!token) {\r\n//       return redirect('/auth?mode=login');\r\n//     }\r\n  \r\n//     return defer({//pt Suspense de sus\r\n//       properties: loadProperties(),\r\n//     });\r\n//   }\r\n  \r\n\r\n// export default PropertiesPage;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}