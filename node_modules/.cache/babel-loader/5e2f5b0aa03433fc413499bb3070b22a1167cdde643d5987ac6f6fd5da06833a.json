{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_c = AuthenticationPage;\nexport const action = async ({\n  request\n}) => {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      message: \"Unsuported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  console.log(data);\n  let authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  if (mode !== \"login\") {\n    authData = {\n      name: data.get(\"name\"),\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n      repeatPassword: data.get(\"repeatPassword\")\n    };\n  }\n  const response = await fetch(\"http://localhost:8000/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user.\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  const isOwner = resData.isOwner;\n  const isAdmin = resData.isAdmin;\n  const userId = resData.userId;\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"isOwner\", isOwner);\n  localStorage.setItem(\"isAdmin\", isAdmin);\n  localStorage.setItem(\"userId\", userId);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem(\"expiration\", expiration.toISOString());\n  if (mode === \"signup\") {\n    return redirect(\"/confirm\");\n  }\n  return redirect(\"/\");\n};\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","console","log","authData","email","password","name","repeatPassword","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","isOwner","isAdmin","userId","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["D:/proiecte/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nconst AuthenticationPage = () => {\r\n \r\n  return <AuthForm />;\r\n};\r\n\r\n\r\nexport const action = async ({ request }) => {\r\n\r\n  const searchParams = new URL(request.url).searchParams;\r\n  \r\n  const mode = searchParams.get(\"mode\") || \"login\";\r\n\r\n\r\n  if (mode !== \"login\" && mode !== \"signup\") {\r\n    throw json({ message: \"Unsuported mode.\" }, { status: 422 });\r\n  }\r\n\r\n  const data = await request.formData();\r\n\r\n  console.log(data);\r\n\r\n  let authData = {\r\n    email: data.get(\"email\"),\r\n    password: data.get(\"password\"),\r\n  };\r\n\r\n  if (mode !== \"login\") {\r\n    authData = {\r\n      name: data.get(\"name\"),\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n      repeatPassword: data.get(\"repeatPassword\"),\r\n    };\r\n  }\r\n\r\n  const response = await fetch(\"http://localhost:8000/\" + mode, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(authData),\r\n  });\r\n\r\n  if (response.status === 422 || response.status === 401) {\r\n    return response;\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not authenticate user.\" }, { status: 500 });\r\n  }\r\n\r\n  const resData = await response.json();\r\n  const token = resData.token;\r\n  const isOwner = resData.isOwner;\r\n  const isAdmin = resData.isAdmin;\r\n  const userId = resData.userId;\r\n\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"isOwner\", isOwner);\r\n  localStorage.setItem(\"isAdmin\", isAdmin);\r\n  localStorage.setItem(\"userId\", userId);\r\n\r\n  const expiration = new Date();\r\n  expiration.setHours(expiration.getHours() + 1);\r\n  localStorage.setItem(\"expiration\", expiration.toISOString());\r\n\r\n  if (mode === \"signup\") {\r\n    return redirect(\"/confirm\");\r\n  }\r\n\r\n  return redirect(\"/\");\r\n};\r\n\r\n\r\nexport default AuthenticationPage;\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAE/B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB,CAAC;AAACC,EAAA,GAHIL,kBAAkB;AAMxB,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAO;EAAEC;AAAQ,CAAC,KAAK;EAE3C,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EAEtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAGhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMhB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9D;EAEA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAErCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,IAAII,QAAQ,GAAG;IACbC,KAAK,EAAEL,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBS,QAAQ,EAAEN,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,IAAID,IAAI,KAAK,OAAO,EAAE;IACpBQ,QAAQ,GAAG;MACTG,IAAI,EAAEP,IAAI,CAACH,GAAG,CAAC,MAAM,CAAC;MACtBQ,KAAK,EAAEL,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;MACxBS,QAAQ,EAAEN,IAAI,CAACH,GAAG,CAAC,UAAU,CAAC;MAC9BW,cAAc,EAAER,IAAI,CAACH,GAAG,CAAC,gBAAgB;IAC3C,CAAC;EACH;EAEA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGd,IAAI,EAAE;IAC5De,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAIK,QAAQ,CAACV,MAAM,KAAK,GAAG,IAAIU,QAAQ,CAACV,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOU,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMpC,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1E;EAEA,MAAMkB,OAAO,GAAG,MAAMR,QAAQ,CAAC7B,IAAI,CAAC,CAAC;EACrC,MAAMsC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAC3B,MAAMC,OAAO,GAAGF,OAAO,CAACE,OAAO;EAC/B,MAAMC,OAAO,GAAGH,OAAO,CAACG,OAAO;EAC/B,MAAMC,MAAM,GAAGJ,OAAO,CAACI,MAAM;EAE7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACpCI,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEJ,OAAO,CAAC;EACxCG,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEH,OAAO,CAAC;EACxCE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAEtC,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;EAE5D,IAAIhC,IAAI,KAAK,QAAQ,EAAE;IACrB,OAAOf,QAAQ,CAAC,UAAU,CAAC;EAC7B;EAEA,OAAOA,QAAQ,CAAC,GAAG,CAAC;AACtB,CAAC;AAGD,eAAeI,kBAAkB;AAAC,IAAAK,EAAA;AAAAuC,YAAA,CAAAvC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}